import * as fs from 'fs';

import { createDirIfNotExits } from '../../helpers/createDirIfNotExits';
import { createFileIfNotExists } from '../../helpers/createFileIfNotExists';
import { debug } from '../../helpers/debug';
import { saveDataToFile } from '../../helpers/saveDataToFile';
import { SERVER_DIR, STOCK_PRICES_BY_DATE_DATA_DIR_NAME, STOCK_PRICES_TODAY_PATH } from '../stocks_common_params';
import { IStocksMarketItemObject } from '../stocks_common_typings';

/**
 * –ó–¥–µ—Å—å –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–∫–µ—Ä–∞—Ö –≤ —Ñ–∞–π–ª, –ø—Ä–∏ —ç—Ç–æ–º
 * 
 * –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
 * –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
 * –ï—Å–ª–∏ –≤ —Ñ–∞–π–ª–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ - –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ –∏ –Ω–æ–≤—ã–µ
 */
export const mergeStocksDateIntoFile = async (stocksData: IStocksMarketItemObject[]) => {
  // –°–æ–∑–¥–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª
  await createStocksDataFileIfNotExits();

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–∑ —Ñ–∞–π–ª–∞
  const fileDataJSON = await getFileDataJSON();

  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏
  const combinedStocksData = combineStocksDataWithFileData(stocksData, fileDataJSON);

  debug('üîπ 7. Save json data to file start.');

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
  const isSaved = await saveDataToFile(JSON.stringify(combinedStocksData), STOCK_PRICES_TODAY_PATH);

  debug('üîπ 8. Save json data to file ok.');

  return isSaved;
};

/**
 * –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏
 */
const combineStocksDataWithFileData = (stocksData: IStocksMarketItemObject[], fileDataJSON) => {
  stocksData.forEach(stocksItem => {
    const { SECID, ...restItemData } = stocksItem;

    if (!fileDataJSON[SECID]) {
      fileDataJSON[SECID] = {};
    }

    if (!fileDataJSON[SECID].values) {
      fileDataJSON[SECID].values = [];
    }

    const tickerValuesArray = fileDataJSON[SECID].values;

    /**
     * –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ–±—ä–µ–∫—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –ù–ï –¥—É–±–ª–∏—Ä—É–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–º–µ—é—â—É—é—Å—è
     * (–Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ø–æ TIME)
     */
    const lastValueData = tickerValuesArray[tickerValuesArray.length - 1];
    const lasValueDataTime = lastValueData && lastValueData.TIME;

    if (lasValueDataTime !== restItemData.TIME) {
      debug(`üî∏ Updated values for '${SECID}'`);

      tickerValuesArray.push(restItemData);
    }
  });

  return fileDataJSON;
}

const getFileDataJSON = async () => {
  debug('üîπ 5. Get file data JSON start.');
  const fileData = await fs.readFileSync(STOCK_PRICES_TODAY_PATH, { encoding: 'utf8' });

  let fileDataJSON = {};

  try {
    fileDataJSON = JSON.parse(fileData);
  } catch (error) {
    fileDataJSON = {};
  }

  debug('üîπ 6. Get file data JSON ok.');

  return fileDataJSON;
};

const createStocksDataFileIfNotExits = async () => {
  debug('üîπ 3. Create stocks data file if not exists start.');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
  await createDirIfNotExits(SERVER_DIR);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞–∫—Ü–∏—è–º
  await createDirIfNotExits(STOCK_PRICES_BY_DATE_DATA_DIR_NAME);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –∞–∫—Ü–∏—è–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
  await createFileIfNotExists(STOCK_PRICES_TODAY_PATH);

  debug('üîπ 4. Create stocks data file if not exists ok.');
};